{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h1\", null, \"Firestore Example\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, _toDisplayString(item.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","items","item","key","id","name"],"sources":["/home/sylver/Files/cours/polytech/4a/qualite_logiciel_et_conduite_de_test/QualiteLogiciel-AMAMKR-/src/components/FirestoreExample.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Firestore Example</h1>\n    <ul>\n      <li v-for=\"item in items\" :key=\"item.id\">{{ item.name }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\n  import { ref, onMounted } from 'vue';\n  import { collection, getDocs } from 'firebase/firestore';\n  import { db } from '../firebase.js'\n\n  export default {\n    name: 'FirestoreExample',\n    setup() {\n      const items = ref([]);\n\n      const fetchItems = async () => {\n        const QuerySnapshot = awaits getDocs(collection(db,'items'));\n        item.value = querySnapshot.docs.map(doc => ({ id, doc.id, ...doc.data() }))\n      };\n\n      onMounted(() => {\n        fetchItems();\n      });\n\n      return{\n        items,\n      };\n    },\n  };\n\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAKM,c,0BAJJC,mBAAA,CAA0B,YAAtB,mBAAiB,sBACrBA,mBAAA,CAEK,c,kBADHD,mBAAA,CAA6DE,SAAA,QAJnEC,WAAA,CAIyBC,IAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAA6D;MAAlCO,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}